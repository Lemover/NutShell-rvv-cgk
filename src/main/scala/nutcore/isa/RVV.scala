package nutcore

import chisel3._
import chisel3.util._

object RVVInstr extends HasInstrType with HasNutCoreParameter {
    def VSETVLI     = BitPat("b0???????????_?????_111_?????_1010111")
    def VSETVL      = BitPat("b1_000000_?????_?????_111_?????_1010111")
    
    def VLDBU       = BitPat("b???_000_?_?????_?????_000_?????_0000111")
    def VLDHU       = BitPat("b???_000_?_?????_?????_101_?????_0000111")
    def VLDWU       = BitPat("b???_000_?_?????_?????_110_?????_0000111")
    def VLDE        = BitPat("b???_000_?_?????_?????_111_?????_0000111")
    def VLDSBU      = BitPat("b???_010_?_?????_?????_000_?????_0000111")
    def VLDSHU      = BitPat("b???_010_?_?????_?????_101_?????_0000111")
    def VLDSWU      = BitPat("b???_010_?_?????_?????_110_?????_0000111")
    def VLDSE       = BitPat("b???_010_?_?????_?????_111_?????_0000111")
    def VLDXBU      = BitPat("b???_011_?_?????_?????_000_?????_0000111")
    def VLDXHU      = BitPat("b???_011_?_?????_?????_101_?????_0000111")
    def VLDXWU      = BitPat("b???_011_?_?????_?????_110_?????_0000111")
    def VLDXE       = BitPat("b???_011_?_?????_?????_111_?????_0000111")
    
    def VLDB        = BitPat("b???_100_?_?????_?????_000_?????_0000111")
    def VLDH        = BitPat("b???_100_?_?????_?????_101_?????_0000111")
    def VLDW        = BitPat("b???_100_?_?????_?????_110_?????_0000111")
    //def VLDE        = BitPat("b???_100_?_?????_?????_111_?????_0000111")
    def VLDSB       = BitPat("b???_110_?_?????_?????_000_?????_0000111")
    def VLDSH       = BitPat("b???_110_?_?????_?????_101_?????_0000111")
    def VLDSW       = BitPat("b???_110_?_?????_?????_110_?????_0000111")
    //def VLDSE       = BitPat("b???_110_?_?????_?????_111_?????_0000111")
    def VLDXB       = BitPat("b???_111_?_?????_?????_000_?????_0000111")
    def VLDXH       = BitPat("b???_111_?_?????_?????_101_?????_0000111")
    def VLDXW       = BitPat("b???_111_?_?????_?????_110_?????_0000111")
    //def VLDXE       = BitPat("b???_111_?_?????_?????_111_?????_0000111")
    
    def VSTB        = BitPat("b???_000_?_?????_?????_000_?????_0100111")
    def VSTH        = BitPat("b???_000_?_?????_?????_101_?????_0100111")
    def VSTW        = BitPat("b???_000_?_?????_?????_110_?????_0100111")
    def VSTE        = BitPat("b???_000_?_?????_?????_111_?????_0100111")
    def VSTSB       = BitPat("b???_010_?_?????_?????_000_?????_0100111")
    def VSTSH       = BitPat("b???_010_?_?????_?????_101_?????_0100111")
    def VSTSW       = BitPat("b???_010_?_?????_?????_110_?????_0100111")
    def VSTSE       = BitPat("b???_010_?_?????_?????_111_?????_0100111")
    def VSTXB       = BitPat("b???_011_?_?????_?????_000_?????_0100111")
    def VSTXH       = BitPat("b???_011_?_?????_?????_101_?????_0100111")
    def VSTXW       = BitPat("b???_011_?_?????_?????_110_?????_0100111")
    def VSTXE       = BitPat("b???_011_?_?????_?????_111_?????_0100111")
    
    def VADDVV      = BitPat("b000000_?_?????_?????_000_?????_1010111")
    def VADDVX      = BitPat("b000000_?_?????_?????_100_?????_1010111")
    def VADDVI      = BitPat("b000000_?_?????_?????_011_?????_1010111")
    def VSUBVV      = BitPat("b000010_?_?????_?????_000_?????_1010111")
    def VSUBVX      = BitPat("b000010_?_?????_?????_100_?????_1010111")
    def VRSUBVX     = BitPat("b000011_?_?????_?????_100_?????_1010111")
    def VRSUBVI     = BitPat("b000011_?_?????_?????_011_?????_1010111")
    def VSLLVV      = BitPat("b100101_?_?????_?????_000_?????_1010111")
    def VSLLVX      = BitPat("b100101_?_?????_?????_100_?????_1010111")
    def VSLLVI      = BitPat("b100101_?_?????_?????_011_?????_1010111")
    def VSRLVV      = BitPat("b101000_?_?????_?????_000_?????_1010111")
    def VSRLVX      = BitPat("b101000_?_?????_?????_100_?????_1010111")
    def VSRLVI      = BitPat("b101000_?_?????_?????_011_?????_1010111")
    def VSRAVV      = BitPat("b101001_?_?????_?????_000_?????_1010111")
    def VSRAVX      = BitPat("b101001_?_?????_?????_100_?????_1010111")
    def VSRAVI      = BitPat("b101001_?_?????_?????_011_?????_1010111")
    def VMINUVV     = BitPat("b000100_?_?????_?????_000_?????_1010111")
    def VMINUVX     = BitPat("b000100_?_?????_?????_100_?????_1010111")
    def VMINVV      = BitPat("b000101_?_?????_?????_000_?????_1010111")
    def VMINVX      = BitPat("b000101_?_?????_?????_100_?????_1010111")
    def VMAXUVV     = BitPat("b000110_?_?????_?????_000_?????_1010111")
    def VMAXUVX     = BitPat("b000110_?_?????_?????_100_?????_1010111")
    def VMAXVV      = BitPat("b000111_?_?????_?????_000_?????_1010111")
    def VMAXVX      = BitPat("b000111_?_?????_?????_100_?????_1010111")
    def VMSEQVV     = BitPat("b011000_?_?????_?????_000_?????_1010111")
    def VMSEQVX     = BitPat("b011000_?_?????_?????_100_?????_1010111")
    def VMSEQVI     = BitPat("b011000_?_?????_?????_011_?????_1010111")
    def VMSNEVV     = BitPat("b011001_?_?????_?????_000_?????_1010111")
    def VMSNEVX     = BitPat("b011001_?_?????_?????_100_?????_1010111")
    def VMSNEVI     = BitPat("b011001_?_?????_?????_011_?????_1010111")
    def VMSLTUVV    = BitPat("b011010_?_?????_?????_000_?????_1010111")
    def VMSLTUVX    = BitPat("b011010_?_?????_?????_100_?????_1010111")
    def VMSLTVV     = BitPat("b011011_?_?????_?????_000_?????_1010111")
    def VMSLTVX     = BitPat("b011011_?_?????_?????_100_?????_1010111")
    def VMSLEUVV    = BitPat("b011100_?_?????_?????_000_?????_1010111")
    def VMSLEUVX    = BitPat("b011100_?_?????_?????_100_?????_1010111")
    def VMSLEUVI    = BitPat("b011100_?_?????_?????_011_?????_1010111")
    def VMSLEVV     = BitPat("b011101_?_?????_?????_000_?????_1010111")
    def VMSLEVX     = BitPat("b011101_?_?????_?????_100_?????_1010111")
    def VMSLEVI     = BitPat("b011101_?_?????_?????_011_?????_1010111")
    def VMSGTUVX    = BitPat("b011110_?_?????_?????_100_?????_1010111")
    def VMSGTUVI    = BitPat("b011110_?_?????_?????_011_?????_1010111")
    def VMSGTVX     = BitPat("b011111_?_?????_?????_100_?????_1010111")
    def VMSGTVI     = BitPat("b011111_?_?????_?????_011_?????_1010111")
    def VANDVV      = BitPat("b001001_?_?????_?????_000_?????_1010111")
    def VANDVX      = BitPat("b001001_?_?????_?????_100_?????_1010111")
    def VANDVI      = BitPat("b001001_?_?????_?????_011_?????_1010111")
    def VORVV       = BitPat("b001010_?_?????_?????_000_?????_1010111")
    def VORVX       = BitPat("b001010_?_?????_?????_100_?????_1010111")
    def VORVI       = BitPat("b001010_?_?????_?????_011_?????_1010111")
    def XORVV       = BitPat("b001011_?_?????_?????_000_?????_1010111")
    def XORVX       = BitPat("b001011_?_?????_?????_100_?????_1010111")
    def XORVI       = BitPat("b001011_?_?????_?????_011_?????_1010111")
    def VMERGEVV    = BitPat("b010111_?_?????_?????_000_?????_1010111")
    def VMERGEVX    = BitPat("b010111_?_?????_?????_100_?????_1010111")
    def VMERGEVI    = BitPat("b010111_?_?????_?????_011_?????_1010111")
    
    def VMULVV      = BitPat("b100101_?_?????_?????_010_?????_1010111")
    def VMULVX      = BitPat("b100101_?_?????_?????_110_?????_1010111")
    def VMULHVV     = BitPat("b100111_?_?????_?????_010_?????_1010111")
    def VMULHVX     = BitPat("b100111_?_?????_?????_110_?????_1010111")
    def VMULHUVV    = BitPat("b100100_?_?????_?????_010_?????_1010111")
    def VMULHUVX    = BitPat("b100100_?_?????_?????_110_?????_1010111")
    def VMULHSUVV   = BitPat("b100110_?_?????_?????_010_?????_1010111")
    def VMULHSUVX   = BitPat("b100110_?_?????_?????_110_?????_1010111")
    def VDIVVV      = BitPat("b100001_?_?????_?????_010_?????_1010111")
    def VDIVVX      = BitPat("b100001_?_?????_?????_110_?????_1010111")
    def VDIVUVV     = BitPat("b100000_?_?????_?????_010_?????_1010111")
    def VDIVUVX     = BitPat("b100000_?_?????_?????_110_?????_1010111")
    def VREMVV      = BitPat("b100011_?_?????_?????_010_?????_1010111")
    def VREMVX      = BitPat("b100011_?_?????_?????_110_?????_1010111")
    def VREMUVV     = BitPat("b100010_?_?????_?????_010_?????_1010111")
    def VREMUVX     = BitPat("b100010_?_?????_?????_110_?????_1010111")
    def VMADDVV     = BitPat("b101001_?_?????_?????_010_?????_1010111")
    def VMADDVX     = BitPat("b101001_?_?????_?????_110_?????_1010111")
    def VNMSUBVV    = BitPat("b101011_?_?????_?????_010_?????_1010111")
    def VNMSUBVX    = BitPat("b101011_?_?????_?????_110_?????_1010111")
    def VMACCVV     = BitPat("b101101_?_?????_?????_010_?????_1010111")
    def VMACCVX     = BitPat("b101101_?_?????_?????_110_?????_1010111")
    def VNMSACVV    = BitPat("b101111_?_?????_?????_010_?????_1010111")
    def VNMSACVX    = BitPat("b101111_?_?????_?????_110_?????_1010111")
    
    def VMPOPC      = BitPat("b010100_?_?????_?????_010_?????_1010111")
    def VMFIRST     = BitPat("b010101_?_?????_?????_010_?????_1010111")
    def VMANDNOT    = BitPat("b011000_?_?????_?????_010_?????_1010111")
    def VMAND       = BitPat("b011001_?_?????_?????_010_?????_1010111")
    def VMOR        = BitPat("b011010_?_?????_?????_010_?????_1010111")
    def VMXOR       = BitPat("b011011_?_?????_?????_010_?????_1010111")
    def VMORNOT     = BitPat("b011100_?_?????_?????_010_?????_1010111")
    def VMNAND      = BitPat("b011101_?_?????_?????_010_?????_1010111")
    def VMNOR       = BitPat("b011110_?_?????_?????_010_?????_1010111")
    def VMXNOR      = BitPat("b011111_?_?????_?????_010_?????_1010111")
    
    def VEXTXV      = BitPat("b001100_?_?????_?????_010_?????_1010111")
    def VMVSX       = BitPat("b001101_?_?????_?????_110_?????_1010111")
    def VREDSUMVS   = BitPat("b000000_?_?????_?????_010_?????_1010111")
    // def VREDMAXUVS  = BitPat("b000110_?_?????_?????_010_?????_1010111")
    // def VREDMAXVX   = BitPat("b000111_?_?????_?????_010_?????_1010111")
    // def VREDMINUVS  = BitPat("b000100_?_?????_?????_010_?????_1010111")
    // def VREDMINVS   = BitPat("b000101_?_?????_?????_010_?????_1010111")
    def VREDANDVS   = BitPat("b000001_?_?????_?????_010_?????_1010111")
    def VREDORVS    = BitPat("b000010_?_?????_?????_010_?????_1010111")
    def VREDXORVS   = BitPat("b000011_?_?????_?????_010_?????_1010111")
    
    val table = Array(
        VSETVLI       -> List(InstrVSI, FuType.alu, ALUOpType.vcfg),
        VSETVL        -> List(InstrR,   FuType.alu, ALUOpType.vcfg),
        
        VLDBU         -> List(InstrNS,  FuType.vmu, VMUOpType.vldbu),
        VLDHU         -> List(InstrNS,  FuType.vmu, VMUOpType.vldhu),
        VLDWU         -> List(InstrNS,  FuType.vmu, VMUOpType.vldwu),
        VLDE          -> List(InstrNS,  FuType.vmu, VMUOpType.vlde),
        VLDSBU        -> List(InstrSS,  FuType.vmu, VMUOpType.vldsbu),
        VLDSHU        -> List(InstrSS,  FuType.vmu, VMUOpType.vldshu),
        VLDSWU        -> List(InstrSS,  FuType.vmu, VMUOpType.vldswu),
        VLDSE         -> List(InstrSS,  FuType.vmu, VMUOpType.vldse),
        VLDXBU        -> List(InstrVS,  FuType.vmu, VMUOpType.vldxbu),
        VLDXHU        -> List(InstrVS,  FuType.vmu, VMUOpType.vldxhu),
        VLDXWU        -> List(InstrVS,  FuType.vmu, VMUOpType.vldxwu),
        VLDXE         -> List(InstrVS,  FuType.vmu, VMUOpType.vldxe),
        
        VLDB         -> List(InstrNS,  FuType.vmu, VMUOpType.vldb),
        VLDH         -> List(InstrNS,  FuType.vmu, VMUOpType.vldh),
        VLDW         -> List(InstrNS,  FuType.vmu, VMUOpType.vldw),
        VLDSB        -> List(InstrSS,  FuType.vmu, VMUOpType.vldsb),
        VLDSH        -> List(InstrSS,  FuType.vmu, VMUOpType.vldsh),
        VLDSW        -> List(InstrSS,  FuType.vmu, VMUOpType.vldsw),
        VLDXB        -> List(InstrVS,  FuType.vmu, VMUOpType.vldxb),
        VLDXH        -> List(InstrVS,  FuType.vmu, VMUOpType.vldxh),
        VLDXW        -> List(InstrVS,  FuType.vmu, VMUOpType.vldxw),
        
        VSTB         -> List(InstrNS,  FuType.vmu, VMUOpType.vstb),
        VSTH         -> List(InstrNS,  FuType.vmu, VMUOpType.vsth),
        VSTW         -> List(InstrNS,  FuType.vmu, VMUOpType.vstw),
        VSTE         -> List(InstrNS,  FuType.vmu, VMUOpType.vste),
        VSTSB        -> List(InstrSS,  FuType.vmu, VMUOpType.vstsb),
        VSTSH        -> List(InstrSS,  FuType.vmu, VMUOpType.vstsh),
        VSTSW        -> List(InstrSS,  FuType.vmu, VMUOpType.vstsw),
        VSTSE        -> List(InstrSS,  FuType.vmu, VMUOpType.vstse),
        VSTXB        -> List(InstrVS,  FuType.vmu, VMUOpType.vstxb),
        VSTXH        -> List(InstrVS,  FuType.vmu, VMUOpType.vstxh),
        VSTXW        -> List(InstrVS,  FuType.vmu, VMUOpType.vstxw),
        VSTXE        -> List(InstrVS,  FuType.vmu, VMUOpType.vstxe),
        
        VADDVV       -> List(InstrVV, FuType.vxu, VXUOpType.addvv),
        VADDVX       -> List(InstrVS, FuType.vxu, VXUOpType.addvx),
        VADDVI       -> List(InstrVI, FuType.vxu, VXUOpType.addvi),
        VSUBVV       -> List(InstrVV, FuType.vxu, VXUOpType.subvv),
        VSUBVX       -> List(InstrVS, FuType.vxu, VXUOpType.subvx),
        VRSUBVX      -> List(InstrVS, FuType.vxu, VXUOpType.rsubvx),
        VRSUBVI      -> List(InstrVI, FuType.vxu, VXUOpType.rsubvi),
        VSLLVV       -> List(InstrVV, FuType.vxu, VXUOpType.sllvv),
        VSLLVX       -> List(InstrVS, FuType.vxu, VXUOpType.sllvx),
        VSLLVI       -> List(InstrVI, FuType.vxu, VXUOpType.sllvi),
        VSRLVV       -> List(InstrVV, FuType.vxu, VXUOpType.srlvv),
        VSRLVX       -> List(InstrVS, FuType.vxu, VXUOpType.srlvx),
        VSRLVI       -> List(InstrVI, FuType.vxu, VXUOpType.srlvi),
        VSRAVV       -> List(InstrVV, FuType.vxu, VXUOpType.sravv),
        VSRAVX       -> List(InstrVS, FuType.vxu, VXUOpType.sravx),
        VSRAVI       -> List(InstrVI, FuType.vxu, VXUOpType.sravi),
        VMINUVV      -> List(InstrVV, FuType.vxu, VXUOpType.minuvv),
        VMINUVX      -> List(InstrVS, FuType.vxu, VXUOpType.minuvx),
        VMINVV       -> List(InstrVV, FuType.vxu, VXUOpType.minvv),
        VMINVX       -> List(InstrVS, FuType.vxu, VXUOpType.minvx),
        VMAXUVV      -> List(InstrVV, FuType.vxu, VXUOpType.maxuvv),
        VMAXUVX      -> List(InstrVS, FuType.vxu, VXUOpType.maxuvx),
        VMAXVV       -> List(InstrVV, FuType.vxu, VXUOpType.maxvv),
        VMAXVX       -> List(InstrVS, FuType.vxu, VXUOpType.maxvx),
        VMSEQVV      -> List(InstrVV, FuType.vxu, VXUOpType.mseqvv),
        VMSEQVX      -> List(InstrVS, FuType.vxu, VXUOpType.mseqvx),
        VMSEQVI      -> List(InstrVI, FuType.vxu, VXUOpType.mseqvi),
        VMSNEVV      -> List(InstrVV, FuType.vxu, VXUOpType.msnevv),
        VMSNEVX      -> List(InstrVS, FuType.vxu, VXUOpType.msnevx),
        VMSNEVI      -> List(InstrVI, FuType.vxu, VXUOpType.msnevi),
        VMSLTUVV     -> List(InstrVV, FuType.vxu, VXUOpType.msltuvv),
        VMSLTUVX     -> List(InstrVS, FuType.vxu, VXUOpType.msltuvx),
        VMSLTVV      -> List(InstrVV, FuType.vxu, VXUOpType.msltvv),
        VMSLTVX      -> List(InstrVS, FuType.vxu, VXUOpType.msltvx),
        VMSLEUVV     -> List(InstrVV, FuType.vxu, VXUOpType.msleuvv),
        VMSLEUVX     -> List(InstrVS, FuType.vxu, VXUOpType.msleuvx),
        VMSLEUVI     -> List(InstrVI, FuType.vxu, VXUOpType.msleuvi),
        VMSLEVV      -> List(InstrVV, FuType.vxu, VXUOpType.mslevv),
        VMSLEVX      -> List(InstrVS, FuType.vxu, VXUOpType.mslevx),
        VMSLEVI      -> List(InstrVI, FuType.vxu, VXUOpType.mslevi),
        VMSGTUVX     -> List(InstrVS, FuType.vxu, VXUOpType.msgtuvx),
        VMSGTUVI     -> List(InstrVI, FuType.vxu, VXUOpType.msgtuvi),
        VMSGTVX      -> List(InstrVS, FuType.vxu, VXUOpType.msgtvx),
        VMSGTVI      -> List(InstrVI, FuType.vxu, VXUOpType.msgtvi),
        VANDVV       -> List(InstrVV, FuType.vxu, VXUOpType.andvv),
        VANDVX       -> List(InstrVS, FuType.vxu, VXUOpType.andvx),
        VANDVI       -> List(InstrVI, FuType.vxu, VXUOpType.andvi),
        VORVV        -> List(InstrVV, FuType.vxu, VXUOpType.orvv),
        VORVX        -> List(InstrVS, FuType.vxu, VXUOpType.orvx),
        VORVI        -> List(InstrVI, FuType.vxu, VXUOpType.orvi),
        XORVV        -> List(InstrVV, FuType.vxu, VXUOpType.xorvv),
        XORVX        -> List(InstrVS, FuType.vxu, VXUOpType.xorvx),
        XORVI        -> List(InstrVI, FuType.vxu, VXUOpType.xorvi),
        VMERGEVV     -> List(InstrVV, FuType.vxu, VXUOpType.mergevv),
        VMERGEVX     -> List(InstrVS, FuType.vxu, VXUOpType.mergevx),
        VMERGEVI     -> List(InstrVI, FuType.vxu, VXUOpType.mergevi),
        
        VMULVV       -> List(InstrVV, FuType.vxu, VXUOpType.mulvv),
        VMULVX       -> List(InstrVS, FuType.vxu, VXUOpType.mulvx),
        VMULHVV      -> List(InstrVV, FuType.vxu, VXUOpType.mulhvv),
        VMULHVX      -> List(InstrVS, FuType.vxu, VXUOpType.mulhvx),
        VMULHUVV     -> List(InstrVV, FuType.vxu, VXUOpType.mulhuvv),
        VMULHUVX     -> List(InstrVS, FuType.vxu, VXUOpType.mulhuvx),
        VMULHSUVV    -> List(InstrVV, FuType.vxu, VXUOpType.mulhsuvv),
        VMULHSUVX    -> List(InstrVS, FuType.vxu, VXUOpType.mulhsuvx),
        VDIVVV       -> List(InstrVV, FuType.vxu, VXUOpType.divvv),
        VDIVVX       -> List(InstrVS, FuType.vxu, VXUOpType.divvx),
        VDIVUVV      -> List(InstrVV, FuType.vxu, VXUOpType.divuvv),
        VDIVUVX      -> List(InstrVS, FuType.vxu, VXUOpType.divuvx),
        VREMVV       -> List(InstrVV, FuType.vxu, VXUOpType.remvv),
        VREMVX       -> List(InstrVS, FuType.vxu, VXUOpType.remvx),
        VREMUVV      -> List(InstrVV, FuType.vxu, VXUOpType.remuvv),
        VREMUVX      -> List(InstrVS, FuType.vxu, VXUOpType.remuvx),
        
        VMADDVV      -> List(InstrVV, FuType.vxu, VXUOpType.maddvv),
        VMADDVX      -> List(InstrVS, FuType.vxu, VXUOpType.maddvx),
        VNMSUBVV     -> List(InstrVV, FuType.vxu, VXUOpType.nmsubvv),
        VNMSUBVX     -> List(InstrVS, FuType.vxu, VXUOpType.nmsubvx),
        VMACCVV      -> List(InstrVV, FuType.vxu, VXUOpType.maccvv),
        VMACCVX      -> List(InstrVS, FuType.vxu, VXUOpType.maccvx),
        VNMSACVV     -> List(InstrVV, FuType.vxu, VXUOpType.nmsacvv),
        VNMSACVX     -> List(InstrVS, FuType.vxu, VXUOpType.nmsacvx),
        
        VMPOPC       -> List(InstrVSB, FuType.vxu, VXUOpType.mpopcm), // no decode space
        VMFIRST      -> List(InstrVSB, FuType.vxu, VXUOpType.mfirstm), // no decode space
        VMANDNOT     -> List(InstrVV,  FuType.vxu, VXUOpType.mandnotmm),
        VMAND        -> List(InstrVV,  FuType.vxu, VXUOpType.mandmm),
        VMOR         -> List(InstrVV,  FuType.vxu, VXUOpType.mormm),
        VMXOR        -> List(InstrVV,  FuType.vxu, VXUOpType.mxormm),
        VMORNOT      -> List(InstrVV,  FuType.vxu, VXUOpType.mornotmm),
        VMNAND       -> List(InstrVV,  FuType.vxu, VXUOpType.mnandmm),
        VMNOR        -> List(InstrVV,  FuType.vxu, VXUOpType.mnormm),
        VMXNOR       -> List(InstrVV,  FuType.vxu, VXUOpType.mxnormm),
        
        VEXTXV       -> List(InstrVSB, FuType.vxu, VXUOpType.extxv),
        VMVSX        -> List(InstrNS, FuType.vxu, VXUOpType.mvsx),
        VREDSUMVS    -> List(InstrVV, FuType.vxu, VXUOpType.redsumvs),
        // VREDMAXUVS   -> List(InstrVV, FuType.vxu, VXUOpType.maxuvs)
        // VREDMAXVX    -> List(InstrVV, FuType.vxu, VXUOpType.maxvs)
        // VREDMINUVS   -> List(InstrVV, FuType.vxu, VXUOpType.minuvs)
        // VREDMINVS    -> List(InstrVV, FuType.vxu, VXUOpType.minvs)
        VREDANDVS    -> List(InstrVV, FuType.vxu, VXUOpType.redandvs),
        VREDORVS     -> List(InstrVV, FuType.vxu, VXUOpType.redorvs),
        VREDXORVS    -> List(InstrVV, FuType.vxu, VXUOpType.redxorvs)
    )
}

